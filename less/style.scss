//sass特点：
//允许使用变量
$blue:#1875e7;
$side:left;
div{
    color: $blue;
}
//可以嵌在字符串中，用#{}连接
.rounded{
    border-#{$side}-radius:5px;
}
//计算功能，允许使用算式
body{
    margin: (14px/2);
    top:50px+100px;
}
//允许嵌套，标签嵌套
div{
    h1{
        color:red;
    }
}
//允许属性嵌套,border属性后面必须加上冒号:
p{
    border:{
        color: red;
    }
}
//嵌套的代码内，可以用&引用父元素
a{
    &:hover{
        color:#ffb3ff;
    }
}
//sass注释
//只保留在sass源文件中，编译后被省略
/*！在/*后面加一个感叹号，表示这是重要注释，通常可以用于声明版权信息
 
 * 会保留到编译后的文件中
 * */

/*sass中，允许一个选择器，继承另一个选择器，用@extend*/
.class1{
    border:1px solid #ddd;
}
.class2{
    @extend .class1;
    font-size: 120%;
}
//Mixin可以重用的代码块,使用@mixin命令，定义一个代码块，使用@include调用mixin
//mixin可以指定参数和缺省参数
@mixin left($value:10px){
    float: left;
    margin-left: $value;
}
div{
    @include left(20px);
}
//　@mixin rounded($vert, $horz, $radius: 10px) {
//　　　　border-#{$vert}-#{$horz}-radius: $radius;
//　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;
//　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;
//　　}
//#navbar li{
//  @include rounded(top,left);
//}
//#footer{
//  @include rounded(top,left,5px);
//}
//有一些内置的颜色函数，生成系列颜色
//@import 插入外部文件
@import "index.css";


//高级用法：条件语句
p{
    @if 1+1==2{border:1px solid;}
    @if 5<3{border:2px dotted;}
}
//循环语句

@for $i from 1 to 10{
    .border-#{$i}{
        border:#{$i}px solid blue;
    }
   
    
}
 @for $i from 1 to 10{
        #index_#{$i}{
         border:1px solid red;
        }
    }
    //each遍历
 @each $member in a,b,c,d{
     .#{$member}{
         background-image: url("/img/#{$member}.png");
     }
 }
 //自定义函数.关键字都用@,变量都用$.调用的时候直接调用
 @function double($n){
     @return $n*2;
 }
#sidebar{
    width:double(5px);
}
